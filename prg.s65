;=====================================================================
; 内藤九段将棋秘伝 (FC) sound test
;
; FIXME: 以前の音が鳴り終わってすぐ別の音を鳴らそうとすると反応しないことがある
;=====================================================================

.setcpu "6502"

.define NOT8(value) <~(value)

PPU_CTRL   = $2000
PPU_MASK   = $2001
PPU_STATUS = $2002
PPU_SCROLL = $2005
PPU_ADDR   = $2006
PPU_DATA   = $2007

PPU_CTRL_NT0        = %00
PPU_CTRL_NMI_ENABLE = 1 << 7

PPU_MASK_BG_ENABLE = 1 << 3

.define PPU_ADDR_NAMETABLE(id, col, row) $2000 + $400*(id) + $20*(row) + (col)
PPU_ADDR_PALETTE = $3F00

APU_SQ0    = $4000
APU_TRI    = $4008
APU_DMC    = $4010
APU_STATUS = $4015
APU_FRAME  = $4017

APU_SQ_DUTY_EIGHTH      = %00 << 6
APU_SQ_DUTY_QUARTER     = %01 << 6
APU_SQ_DUTY_HALF        = %10 << 6
APU_SQ_DUTY_QUARTER_NEG = %11 << 6

APU_SQ_SWEEP_NEGATE = 1 << 3
APU_SQ_SWEEP_ENABLE = 1 << 7

APU_STATUS_SQ0 = 1 << 0
APU_STATUS_TRI = 1 << 2

APU_FRAME_IRQ_DISABLE = 1 << 6
APU_FRAME_STEP5       = 1 << 7

CONTROLLER = $4016


BUTTON_A = 1 << 7
BUTTON_B = 1 << 6
BUTTON_L = 1 << 1
BUTTON_R = 1 << 0

N_SOUND = 13


;---------------------------------------------------------------------
.segment "ZP" : zeropage
;---------------------------------------------------------------------

tmp: .res 16

ppu_ctrl:     .res 1
ppu_scroll_x: .res 1
ppu_scroll_y: .res 1

nmi_done: .res 1

; ABSTUDLR
input:      .res 1
input_edge: .res 1      ; 前回何かボタンを押してたら 0

sound_id: .res 1

apu_sq0: .res 4
apu_tri: .res 4
apu_status: .res 1

sound_length_msb:  .res 1
sound_timer_value: .res 2

sq0_sound_ptr: .res 2
sq0_octave:    .res 1

tri_sound_ptr: .res 2
tri_octave:    .res 1


;---------------------------------------------------------------------
.segment "CODE"
;---------------------------------------------------------------------

;-----------------------------
; common
;-----------------------------

UNREACHABLE:    .byte   $02     ; KIL


;-----------------------------
; sound data
;-----------------------------

note_timer_values: ; {{{
        .word   855     ; C3
        .word   807     ; C#3
        .word   762     ; D3
        .word   719     ; D#3
        .word   679     ; E3
        .word   641     ; F3
        .word   605     ; F#3
        .word   571     ; G3
        .word   539     ; G#3
        .word   508     ; A3
        .word   480     ; A#3
        .word   453     ; B3
        .word   0
; }}}

sound0_sq0: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 6
        .byte   (11<<4) | 1
; }}}

sound1_sq0: ; {{{
        .byte   (12<<4) | 1
        .byte   (10<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 6
        .byte   ( 0<<4) | 8
        .byte   ( 0<<4) | 6
        .byte   ( 0<<4) | 8
        .byte   ( 0<<4) | 10
        .byte   ( 0<<4) | 10
        .byte   (11<<4) | 1
; }}}

sound2_sq0: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 0
        .byte   ( 2<<4) | 12
        .byte   (11<<4) | 1
; }}}

sound3_sq0: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 2
        .byte   (11<<4) | 1
; }}}

sound4_sq0: ; {{{
        .byte   (12<<4) | 2
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 2<<4) | 0
        .byte   ( 2<<4) | 2
        .byte   ( 1<<4) | 4
        .byte   ( 2<<4) | 5
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 0
        .byte   ( 1<<4) | 0
        .byte   ( 1<<4) | 2
        .byte   ( 1<<4) | 4
        .byte   ( 3<<4) | 0
        .byte   (11<<4) | 1
; }}}
sound4_tri: ; {{{
        .byte   (12<<4) | 1
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 2<<4) | 0
        .byte   ( 2<<4) | 2
        .byte   ( 1<<4) | 4
        .byte   ( 2<<4) | 5
        .byte   ( 1<<4) | 4
        .byte   ( 2<<4) | 0
        .byte   ( 2<<4) | 4
        .byte   ( 3<<4) | 0
        .byte   (11<<4) | 1
; }}}

sound5_sq0_tri: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 1
        .byte   ( 1<<4) | 7
        .byte   ( 1<<4) | 5
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 5
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 2
        .byte   ( 2<<4) | 0
        .byte   (11<<4) | 1
; }}}

sound6_sq0: ; {{{
        .byte   (12<<4) | 1
        .byte   (10<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 0
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 7
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 12
        .byte   (11<<4) | 1
; }}}

sound7_sq0: ; {{{
        .byte   (12<<4) | 2
        .byte   (10<<4) | 0
        .byte   ( 9<<4) | 1
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 7
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 2
        .byte   (12<<4) | 0
        .byte   ( 0<<4) | 0
        .byte   ( 0<<4) | 0
        .byte   (11<<4) | 1

; }}}

sound8_sq0: ; {{{
        .byte   (12<<4) | 2
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 12
        .byte   ( 1<<4) | 3
        .byte   (11<<4) | 1
; }}}

sound9_sq0: ; {{{
        .byte   (12<<4) | 1
        .byte   (10<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 5
        .byte   (11<<4) | 1
; }}}

sound10_sq0: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 5
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 4
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 3
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 5
        .byte   ( 9<<4) | 1
        .byte   ( 0<<4) | 9
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 9<<4) | 1
        .byte   ( 0<<4) | 9
        .byte   (12<<4) | 3
        .byte   ( 9<<4) | 2
        .byte   ( 2<<4) | 4
        .byte   ( 2<<4) | 5
        .byte   ( 2<<4) | 5
        .byte   ( 5<<4) | 11
        .byte   ( 9<<4) | 3
        .byte   ( 1<<4) | 2
        .byte   ( 3<<4) | 4
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 2
        .byte   ( 9<<4) | 2
        .byte   ( 1<<4) | 11
        .byte   ( 9<<4) | 3
        .byte   ( 1<<4) | 2
        .byte   ( 3<<4) | 4
        .byte   (11<<4) | 1
; }}}
sound10_tri: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 2<<4) | 9
        .byte   ( 2<<4) | 9
        .byte   ( 2<<4) | 9
        .byte   ( 2<<4) | 9
        .byte   ( 9<<4) | 3
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 4
        .byte   ( 2<<4) | 4
        .byte   ( 2<<4) | 4
        .byte   ( 2<<4) | 4
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 2
        .byte   ( 2<<4) | 11
        .byte   (11<<4) | 1
; }}}

sound11_sq0_tri: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 6<<4) | 0
        .byte   ( 0<<4) | 0
        .byte   ( 0<<4) | 0
        .byte   ( 6<<4) | 0
        .byte   ( 0<<4) | 0
        .byte   ( 1<<4) | 0
        .byte   ( 1<<4) | 7
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 7
        .byte   ( 6<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 6<<4) | 2
        .byte   ( 0<<4) | 2
        .byte   ( 1<<4) | 2
        .byte   ( 1<<4) | 9
        .byte   ( 1<<4) | 5
        .byte   ( 1<<4) | 9
        .byte   ( 6<<4) | 4
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 4
        .byte   ( 6<<4) | 4
        .byte   ( 0<<4) | 4
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 11
        .byte   ( 1<<4) | 7
        .byte   ( 1<<4) | 11
        .byte   (12<<4) | 4
        .byte   ( 1<<4) | 9
        .byte   ( 1<<4) | 9
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 11
        .byte   ( 1<<4) | 11
        .byte   ( 9<<4) | 3
        .byte   ( 3<<4) | 0
        .byte   (11<<4) | 1
; }}}

sound12_sq0: ; {{{
        .byte   (12<<4) | 0
        .byte   (10<<4) | 1
        .byte   ( 9<<4) | 2
        .byte   ( 1<<4) | 9
        .byte   ( 1<<4) | 7
        .byte   ( 1<<4) | 9
        .byte   ( 1<<4) | 11
        .byte   ( 9<<4) | 3
        .byte   ( 1<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 1<<4) | 11
        .byte   ( 1<<4) | 9
        .byte   ( 1<<4) | 7
        .byte   ( 1<<4) | 11
        .byte   ( 9<<4) | 3
        .byte   ( 1<<4) | 0
        .byte   ( 1<<4) | 2
        .byte   ( 1<<4) | 4
        .byte   ( 1<<4) | 2
        .byte   ( 1<<4) | 0
        .byte   ( 9<<4) | 2
        .byte   ( 0<<4) | 11
        .byte   ( 0<<4) | 11
        .byte   ( 1<<4) | 9
        .byte   (12<<4) | 2
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 0<<4) | 9
        .byte   ( 0<<4) | 4
        .byte   ( 3<<4) | 9
        .byte   (11<<4) | 1
; }}}

;-----------------------------
; main "thread"
;-----------------------------

RESET: ; {{{
        sei
        cld

        ldx     #$FF
        txs

        lda     #0
        sta     PPU_CTRL        ; NMI 無効
        sta     PPU_MASK        ; 描画無効
        sta     APU_DMC         ; DMC IRQ 無効

        lda     #APU_FRAME_IRQ_DISABLE
        sta     APU_FRAME

        lda     #0
        ldx     #0
@clear_ram:
        sta     $00,x
        sta     $0100,x
        sta     $0200,x
        sta     $0300,x
        sta     $0400,x
        sta     $0500,x
        sta     $0600,x
        sta     $0700,x
        inx
        bne     @clear_ram

        jsr     InitPpu

        jmp     MainLoop
; }}}


InitPpu: ; {{{
        bit     PPU_STATUS
@wait_vblank_1:
        bit     PPU_STATUS
        bpl     @wait_vblank_1
@wait_vblank_2:
        bit     PPU_STATUS
        bpl     @wait_vblank_2

        ; VRAM ($2000-$2400) を 0 クリア
        lda     #>$2000
        sta     PPU_ADDR
        lda     #<$2000
        sta     PPU_ADDR
        lda     #0
        ldx     #>$400
        ldy     #<$400
@clear_vram:
        sta     PPU_DATA
        dey
        bne     @clear_vram
        dex
        bne     @clear_vram

        ; パレット設定
        lda     #>PPU_ADDR_PALETTE
        sta     PPU_ADDR
        lda     #<PPU_ADDR_PALETTE
        sta     PPU_ADDR
        lda     #$0F
        sta     PPU_DATA
        lda     #$20
        sta     PPU_DATA
        lda     #$0F
        sta     PPU_DATA
        sta     PPU_DATA

        ; スクロール (0,0)
        lda     #0
        sta     ppu_scroll_x
        sta     PPU_SCROLL
        sta     ppu_scroll_y
        sta     PPU_SCROLL

        ; 描画有効
        lda     #PPU_MASK_BG_ENABLE
        sta     PPU_MASK

        ; NMI 有効
        lda     #PPU_CTRL_NT0 | PPU_CTRL_NMI_ENABLE
        sta     ppu_ctrl
        sta     PPU_CTRL

        rts
; }}}


MainLoop: ; {{{
@wait_nmi:
        lda     nmi_done
        beq     @wait_nmi
        lda     #0
        sta     nmi_done

        lda     input_edge
        and     #BUTTON_L
        beq     @chk_button_R
        ldx     sound_id
        dex
        bpl     @dec_sound_id
        ldx     #N_SOUND-1
@dec_sound_id:
        stx     sound_id

@chk_button_R:
        lda     input_edge
        and     #BUTTON_R
        beq     @chk_button_A
        ldx     sound_id
        inx
        cpx     #N_SOUND
        bcc     @inc_sound_id
        ldx     #0
@inc_sound_id:
        stx     sound_id

@chk_button_A:
        lda     input_edge
        and     #BUTTON_A
        beq     @next
        jsr     RequestSound

@next:
        jmp     MainLoop
; }}}


RequestSound: ; {{{
        lda     #0
        sta     apu_status
        sta     APU_STATUS

        lda     sound_id
        asl
        tay

        lda     request_sound_funcs,y
        sta     tmp
        lda     request_sound_funcs+1,y
        sta     tmp+1

        jmp     (tmp)
; }}}

request_sound_funcs: ; {{{
        .addr   RequestSound0
        .addr   RequestSound1
        .addr   RequestSound2
        .addr   RequestSound3
        .addr   RequestSound4
        .addr   RequestSound5
        .addr   RequestSound6
        .addr   RequestSound7
        .addr   RequestSound8
        .addr   RequestSound9
        .addr   RequestSound10
        .addr   RequestSound11
        .addr   RequestSound12
; }}}

RequestSound0: ; {{{
        lda     #<sound0_sq0
        ldx     #>sound0_sq0
        jmp     RequestSq0
; }}}

RequestSound1: ; {{{
        lda     #<sound1_sq0
        ldx     #>sound1_sq0
        jmp     RequestSq0
; }}}

RequestSound2: ; {{{
        lda     #<sound2_sq0
        ldx     #>sound2_sq0
        jmp     RequestSq0
; }}}

RequestSound3: ; {{{
        lda     #<sound3_sq0
        ldx     #>sound3_sq0
        jmp     RequestSq0
; }}}

RequestSound4: ; {{{
        lda     #<sound4_sq0
        ldx     #>sound4_sq0
        jsr     RequestSq0

        lda     #<sound4_tri
        ldx     #>sound4_tri
        jmp     RequestTri
; }}}

RequestSound5: ; {{{
        lda     #<sound5_sq0_tri
        ldx     #>sound5_sq0_tri
        jsr     RequestSq0

        lda     #<sound5_sq0_tri
        ldx     #>sound5_sq0_tri
        jmp     RequestTri
; }}}

RequestSound6: ; {{{
        lda     #<sound6_sq0
        ldx     #>sound6_sq0
        jmp     RequestSq0
; }}}

RequestSound7: ; {{{
        lda     #<sound7_sq0
        ldx     #>sound7_sq0
        jmp     RequestSq0
; }}}

RequestSound8: ; {{{
        lda     #<sound8_sq0
        ldx     #>sound8_sq0
        jmp     RequestSq0
; }}}

RequestSound9: ; {{{
        lda     #<sound9_sq0
        ldx     #>sound9_sq0
        jmp     RequestSq0
; }}}

RequestSound10: ; {{{
        lda     #<sound10_sq0
        ldx     #>sound10_sq0
        jsr     RequestSq0

        lda     #<sound10_tri
        ldx     #>sound10_tri
        jmp     RequestTri
; }}}

RequestSound11: ; {{{
        lda     #<sound11_sq0_tri
        ldx     #>sound11_sq0_tri
        jsr     RequestSq0

        lda     #<sound11_sq0_tri
        ldx     #>sound11_sq0_tri
        jmp     RequestTri
; }}}

RequestSound12: ; {{{
        lda     #<sound12_sq0
        ldx     #>sound12_sq0
        jmp     RequestSq0
; }}}

RequestSq0: ; {{{
; 引数
;       A       SQ0 サウンドデータアドレス下位
;       X       SQ0 サウンドデータアドレス上位

        sta     sq0_sound_ptr
        stx     sq0_sound_ptr+1

        lda     apu_status
        ora     #APU_STATUS_SQ0
        sta     apu_status
        ; TODO: 冒頭の FIXME の件はこの辺が悪さをしてる?
        sta     APU_STATUS

        rts
; }}}

RequestTri: ; {{{
; 引数
;       A       TRI サウンドデータアドレス下位
;       X       TRI サウンドデータアドレス上位

        sta     tri_sound_ptr
        stx     tri_sound_ptr+1

        lda     apu_status
        ora     #APU_STATUS_TRI
        sta     apu_status
        ; TODO: 冒頭の FIXME の件はこの辺が悪さをしてる?
        sta     APU_STATUS

        rts
; }}}


;-----------------------------
; NMI "thread"
;-----------------------------

NMI: ; {{{
        pha
        txa
        pha
        tya
        pha

        ; NMI 禁止
        lda     ppu_ctrl
        and     #NOT8 PPU_CTRL_NMI_ENABLE
        sta     PPU_CTRL

        jsr     PresentSoundId

        jsr     ProceedSounds

        jsr     InputUpdate

        lda     ppu_scroll_x
        sta     PPU_SCROLL
        lda     ppu_scroll_y
        sta     PPU_SCROLL

        ; NMI 許可
        bit     PPU_STATUS
        lda     ppu_ctrl
        sta     PPU_CTRL

        lda     #1
        sta     nmi_done

        pla
        tay
        pla
        tax
        pla

        rti
; }}}


PresentSoundId: ; {{{
@ppu_addr = PPU_ADDR_NAMETABLE 0, 15, 15
        lda     #>@ppu_addr
        sta     PPU_ADDR
        lda     #<@ppu_addr
        sta     PPU_ADDR

        ; 十の位
        ldx     #$30 - 1
        lda     sound_id
@div10:
        inx
        sec
        sbc     #10
        bcs     @div10
        adc     #10
        stx     PPU_DATA

        ; 一の位
        clc
        adc     #$30
        sta     PPU_DATA

        rts
; }}}


ProceedSounds: ; {{{
        lda     apu_status
        and     #APU_STATUS_SQ0
        beq     @tri
        jsr     ProceedSq0

@tri:
        lda     apu_status
        and     #APU_STATUS_TRI
        beq     @rts
        jsr     ProceedTri

@rts:
        rts
; }}}


ProceedSq0: ; {{{
        ; 発音中なら何もしない (APU_STATUS のフラグをタイマーとして利用)
        lda     APU_STATUS
        and     #APU_STATUS_SQ0
        bne     @rts
        ; 消音中なら次のデータを処理
        jsr     ProcessSq0Data
@rts:
        rts
; }}}

ProcessSq0Data: ; {{{
@data_byte = tmp
@loop:
        ldy     #0
        lda     (sq0_sound_ptr),y
        sta     @data_byte

        inc     sq0_sound_ptr
        bne     @interpret
        inc     sq0_sound_ptr+1

@interpret:
        and     #$F
        tax

        lda     @data_byte
        lsr
        lsr
        lsr
        lsr

        jsr     ProcessSq0Command

        bcs     @loop

        rts
; }}}


ProcessSq0Command: ; {{{
; 引数
;       A       サウンドデータ コマンド (0..=12)
;       X       サウンドデータ 引数
;
; 戻り値
;       P.C     0:ループ終了, 1:ループ継続

        pha

        asl
        tay

        lda     sq0_command_funcs,y
        sta     tmp
        lda     sq0_command_funcs+1,y
        sta     tmp+1

        pla

        jmp     (tmp)
; }}}

sq0_command_funcs: ; {{{
; 引数
;       A       コマンド (0..=12)
;       X       引数
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   Sq0Play
        .addr   UNREACHABLE
        .addr   Sq0ChangeOctave
        .addr   SetSoundLengthMsb
        .addr   Sq0Stop
        .addr   Sq0Configure
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
; }}}

SetSoundLengthMsb: ; {{{
        stx     sound_length_msb

        sec
        rts
; }}}

Sq0Play: ; {{{
        asl
        asl
        asl
        asl
        ldy     sound_length_msb
        beq     @set_length
        ora     #1 << 7
@set_length:
        sta     apu_sq0+3

        txa
        ldx     sq0_octave
        jsr     NoteTimerValue

        lda     sound_timer_value
        sta     apu_sq0+2
        sta     APU_SQ0+2
        lda     sound_timer_value+1
        and     #3
        ora     apu_sq0+3
        sta     apu_sq0+3
        sta     APU_SQ0+3

        clc
        rts
; }}}

Sq0ChangeOctave: ; {{{
        txa
        and     #7
        sta     sq0_octave

        sec
        rts
; }}}

Sq0Stop: ; {{{
        lda     apu_status
        and     #NOT8 APU_STATUS_SQ0
        sta     apu_status
        sta     APU_STATUS

        clc
        rts
; }}}

Sq0Configure: ; {{{
        txa
        asl
        tax

        lda     sq0_configure_funcs,x
        sta     tmp
        lda     sq0_configure_funcs+1,x
        sta     tmp+1

        jmp     (tmp)
; }}}

sq0_configure_funcs: ; {{{
; 戻り値
;       X       APU_SQ0   の設定値
;       Y       APU_SQ0+1 の設定値
        .addr   Sq0Configure0
        .addr   Sq0Configure1
        .addr   Sq0Configure2
        .addr   Sq0Configure3
        .addr   Sq0Configure4
        .addr   Sq0Configure5
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
; }}}

Sq0Configure0:
        ldx     #APU_SQ_DUTY_QUARTER_NEG | 15
        ldy     #0
        jmp	Sq0ConfigureGo

Sq0Configure1:
        ldx     #APU_SQ_DUTY_QUARTER_NEG | 15
        ldy     #APU_SQ_SWEEP_ENABLE | (4<<4) | 2
        jmp	Sq0ConfigureGo

Sq0Configure2:
        ldx     #APU_SQ_DUTY_QUARTER_NEG | 15
        ldy     #APU_SQ_SWEEP_ENABLE | (1<<4) | APU_SQ_SWEEP_NEGATE | 4
        jmp	Sq0ConfigureGo

Sq0Configure3:
        ldx     #APU_SQ_DUTY_HALF | 15
        ldy     #(2<<4) | 6
        jmp	Sq0ConfigureGo

Sq0Configure4:
        ldx     #APU_SQ_DUTY_EIGHTH | 15
        ldy     #APU_SQ_SWEEP_ENABLE | (0<<4) | 7
        jmp	Sq0ConfigureGo

Sq0Configure5:
        ldx     #APU_SQ_DUTY_QUARTER_NEG | 15
        ldy     #(5<<4) | 7
        jmp	Sq0ConfigureGo

Sq0ConfigureGo: ; {{{
        stx     apu_sq0
        stx     APU_SQ0
        sty     apu_sq0+1
        sty     APU_SQ0+1

        sec
        rts
; }}}


ProceedTri: ; {{{
        ; 発音中なら何もしない (APU_STATUS のフラグをタイマーとして利用)
        lda     APU_STATUS
        and     #APU_STATUS_TRI
        bne     @rts
        ; 消音中なら次のデータを処理
        jsr     ProcessTriData
@rts:
        rts
; }}}

ProcessTriData: ; {{{
@data_byte = tmp
@loop:
        ldy     #0
        lda     (tri_sound_ptr),y
        sta     @data_byte

        inc     tri_sound_ptr
        bne     @interpret
        inc     tri_sound_ptr+1

@interpret:
        and     #$F
        tax

        lda     @data_byte
        lsr
        lsr
        lsr
        lsr

        jsr     ProcessTriCommand

        bcs     @loop

        rts
; }}}

ProcessTriCommand: ; {{{
; 引数
;       A       サウンドデータ コマンド (0..=12)
;       X       サウンドデータ 引数
;
; 戻り値
;       P.C     0:ループ終了, 1:ループ継続

        pha

        asl
        tay

        lda     tri_command_funcs,y
        sta     tmp
        lda     tri_command_funcs+1,y
        sta     tmp+1

        pla

        jmp     (tmp)
; }}}

tri_command_funcs: ; {{{
; 引数
;       A       コマンド (0..=12)
;       X       引数
        .addr   TriPlay
        .addr   TriPlay
        .addr   TriPlay
        .addr   TriPlay
        .addr   TriPlay
        .addr   TriPlay
        .addr   TriPlay
        .addr   TriPlay
        .addr   UNREACHABLE
        .addr   TriChangeOctave
        .addr   SetSoundLengthMsb
        .addr   TriStop
        .addr   TriNop
        .addr   UNREACHABLE
        .addr   UNREACHABLE
        .addr   UNREACHABLE
; }}}

TriPlay: ; {{{
        asl
        asl
        asl
        asl
        ldy     sound_length_msb
        beq     @set_length
        ora     #1 << 7
@set_length:
        sta     apu_tri+3

        txa
        ldx     tri_octave
        jsr     NoteTimerValue

        lda     #54
        sta     APU_TRI

        lda     sound_timer_value
        sta     apu_tri+2
        sta     APU_TRI+2
        lda     sound_timer_value+1
        and     #3
        ora     apu_tri+3
        sta     apu_tri+3
        sta     APU_TRI+3

        clc
        rts
; }}}

TriChangeOctave: ; {{{
        txa
        and     #7
        sta     tri_octave

        sec
        rts
; }}}

TriStop: ; {{{
        lda     apu_status
        and     #NOT8 APU_STATUS_TRI
        sta     apu_status
        sta     APU_STATUS

        clc
        rts
; }}}

TriNop: ; {{{
        sec
        rts
; }}}


NoteTimerValue: ; {{{
;;; 指定した音階/オクターブ数に対応する矩形波/三角波タイマー値を得る
; 引数
;       A       音階 (0..=12)
;               0 が C
;               12 はタイマー値 0
;       X       オクターブ数 (1-based, 1..=7)
;               矩形波で A=0 の場合、X=1: C4, X=2: C5, ...
;               三角波で A=0 の場合、X=1: C3, X=2: C4, ...
        asl
        tay

        lda     note_timer_values,y
        sta     sound_timer_value
        lda     note_timer_values+1,y
        sta     sound_timer_value+1

@loop:
        lsr     sound_timer_value+1
        ror     sound_timer_value
        dex
        bne     @loop

        rts
; }}}


InputUpdate: ; {{{
        lda     #1
        sta     input_edge      ; この bit をループ終了判定に使う
        sta     CONTROLLER
        lsr
        sta     CONTROLLER

@loop:
        lda     CONTROLLER
        and     #3
        cmp     #1
        rol     input_edge
        bcc     @loop

        lda     input
        beq     @edge
        lda     input_edge
        sta     input
        lda     #0
        sta     input_edge
        beq     @rts    ; bra
@edge:
        lda     input_edge
        sta     input
@rts:
        rts
; }}}


;;; boilerplate {{{
IRQ:    rti

.segment "VECTORS"
        .addr   NMI, RESET, IRQ

.segment "HEADER"
        .byte   $4E, $45, $53, $1A
        .byte   1
        .byte   1
; }}}
